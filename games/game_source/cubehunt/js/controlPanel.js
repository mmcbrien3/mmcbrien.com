var canvas=document.getElementById("myCanvas"),ctx=canvas.getContext("2d");canvas.addEventListener("mousedown",handleMenuClicks,!1),canvas.addEventListener("touchstart",handleMenuClicks,!1),canvas.addEventListener("mouseup",handleRelease,!1),canvas.addEventListener("touchend",handleRelease,!1),canvas.addEventListener("mousemove",handleMouseMove,!1),canvas.addEventListener("touchmove",handleMouseMove,!1),document.addEventListener("keydown",handleGameKeysDown,!1),document.addEventListener("keyup",handleGameKeysUp,!1);var timerInterval,size=10,key={left:!1,right:!1,up:!1,down:!1},playingGame=!1,playSmooth=!0,wallColor="#C69354",bgColor="#00254C",menuColor=wallColor,rainbowColors=["#F49AC2","#AEC6CF","#77BE77","#CFCFC4","#FDFD96","#826953"],sixButton={x:50,y:225,width:100,height:50,color:"#C69354"},tenButton={x:200,y:225,width:100,height:50,color:"#C69354"},fourteenButton={x:350,y:225,width:100,height:50,color:"#C69354"},smoothButton={x:200,y:425,width:100,height:50,color:"#00FF00"},jsSquare={x:260,y:125,width:50,height:50,color:"#F1DA4E"},playerSymbol={x:50,y:50,width:50,height:50,color:"#FFFFFF"},objectiveSymbol={x:350,y:50,width:50,height:50,color:"#FF0000"};function resetGame(){playingGame=!1,level=1,lowestTime=size/2,milliseconds=score=0,seconds=allowed=size=10,pathway=new map({width:size,height:size}),playerSymbol={x:50,y:50,width:50,height:50,color:"#FFFFFF"},objectiveSymbol={x:350,y:50,width:50,height:50,color:"#FF0000"},player=new playerSquare(playerSymbol),wallPos=[],walls=addWalls(),pathway.addWalls(wallPos),objective=new square(objectiveSymbol),isMouseDown=yMouseMovement=xMouseMovement=0,curMouseEvent=null,resetScreen(),clearInterval(timerInterval),drawAll()}var level=1,score=0,lowestTime=size/2,milliseconds=0,allowed=size,seconds=allowed,pathway=new map({width:size,height:size}),player=new playerSquare(playerSymbol),wallPos=[],walls=addWalls();pathway.addWalls(wallPos);var objective=new square(objectiveSymbol),xMouseMovement=0,yMouseMovement=0,isMouseDown=0,curMouseEvent=null,welcomeMessage="CUBE HUNT",sixLabel="Mini",tenLabel="Normal",fourteenLabel="Massive",smoothLabel="Smooth",pureJsPureLabel="Pure",pureJsJsLabel="JS",timeLabel="0.0",scoreLabel="0",smoothBasePlayerSpeed=6;function gameLoop(){playingGame&&(0<seconds?(lost=!0,playGame(playSmooth)):loseGame()),requestAnimationFrame(drawAll)}function drawRect(e){ctx.beginPath(),ctx.rect(e.x,e.y,e.width,e.height),ctx.fillStyle=e.color,ctx.fill()}function checkClickInRect(e,t,a){return e>=a.x&&e<=a.x+a.width&&t>=a.y&&t<a.y+a.height}function getMousePos(e,t){var a=e.getBoundingClientRect();return void 0!==t.clientX?{x:(t.clientX-a.left)/(a.right-a.left)*e.width,y:(t.clientY-a.top)/(a.bottom-a.top)*e.height}:{x:(t.touches[0].clientX-a.left)/(a.right-a.left)*e.width,y:(t.touches[0].clientY-a.top)/(a.bottom-a.top)*e.height}}function handleRelease(e){isMouseDown=!1}function handleMouseMove(e){playingGame&&isMouseDown&&(curMouseEvent=e)}function handleMenuClicks(e){if(playingGame)return isMouseDown=!0,void(curMouseEvent=e);mp=getMousePos(canvas,e),x=mp.x,y=mp.y,checkClickInRect(x,y,sixButton)?(size=6,playingGame=!0,canvas.width=300,canvas.height=300,setGame()):checkClickInRect(x,y,tenButton)?(size=10,playingGame=!0,canvas.width=500,canvas.height=500,setGame()):checkClickInRect(x,y,fourteenButton)?(size=14,playingGame=!0,canvas.width=700,canvas.height=700,setGame()):checkClickInRect(x,y,smoothButton)}function resetScreen(){canvas.width=500,canvas.height=500}function handleGameKeysDown(e){if(27===e.keyCode)return playingGame=!1,void resetGame();("Right"!=e.key&&"ArrowRight"!=e.key&&"d"!=e.key||!playSmooth&&!1!==key.right||(key.right=!0,playSmooth))&&("Left"!=e.key&&"ArrowLeft"!=e.key&&"a"!=e.key||!playSmooth&&!1!==key.left||(key.left=!0,playSmooth))&&("Up"!=e.key&&"ArrowUp"!=e.key&&"w"!=e.key||!playSmooth&&!1!==key.up||(key.up=!0,playSmooth))&&("Down"!=e.key&&"ArrowDown"!=e.key&&"s"!=e.key||!playSmooth&&!1!==key.down||(key.down=!0))}function handleGameKeysUp(e){"Right"!=e.key&&"ArrowRight"!=e.key&&"d"!=e.key||(key.right=!1),"Left"!=e.key&&"ArrowLeft"!=e.key&&"a"!=e.key||(key.left=!1),"Up"!=e.key&&"ArrowUp"!=e.key&&"w"!=e.key||(key.up=!1),"Down"!=e.key&&"ArrowDown"!=e.key&&"s"!=e.key||(key.down=!1)}function doRectsCollide(e,t){return e.x<t.x+t.width&&e.x+e.width>t.x&&e.y<t.y+t.height&&e.y+e.height>t.y}function resetKeys(){playSmooth&&!isMouseDown||(key.right=!1,key.left=!1,key.up=!1,key.down=!1)}function getDistTweenMouseAndPlayer(e,t){var a=Math.pow(e.x-t.x,2),o=Math.pow(e.y-t.y,2);return Math.sqrt(a+o)}function getMaxDistanceBySize(){return Math.sqrt(Math.pow(canvas.width,2)+Math.pow(canvas.height,2))}function getMousePlayerSpeed(){var e=getDistTweenMouseAndPlayer(getMousePos(canvas,curMouseEvent),player.returnPos()),t=getMaxDistanceBySize(),a=3.1415*smoothBasePlayerSpeed*(e/t);if(7===(a=(a=7<a?7:a)<3?3:a));return a}function playGame(e){if(e){if(seconds=allowed-milliseconds/1e3,isMouseDown){mp=getMousePos(canvas,curMouseEvent),x=mp.x,y=mp.y,yMouseMovement=xMouseMovement=0;x>player.returnPos().x+25?key.right=!0:x<player.returnPos().x+25&&(key.left=!0),y>player.returnPos().y+25?key.down=!0:y<player.returnPos().y+25&&(key.up=!0)}if(key=doubleCheckMoves(key),resetKeys(isMouseDown),pathway.addPlayer(player.returnPos()),doRectsCollide(player.returnRect(),objective.returnRect()))if(walls.length>=size*size-2)score+=2,levelUpNoScoreIncrement();else{if(pathway.setPlayerToObjective(),36-pathway.getEmpties().length!=walls.length+1){pathway.getEmpties()}score+=1,i=3<level?new square({x:-50,y:-50,width:50,height:50,color:rainbowColors[Math.floor(Math.random()*rainbowColors.length)]}):new square({x:-50,y:-50,width:50,height:50,color:wallColor});var t=pathway.addRandom("wall");i.place(t);for(var a=pathway.getOptions(player.returnPos()),o=[],l=0;l<a.length;l++)o.push(a[l].object);for(;-1===o.indexOf("_")&&-1===o.indexOf("O")||doRectsCollide(player.returnRect(),i.returnRect());){if(walls.length===size*size-4)return score+=1,walls.push(new square({x:-50,y:-50,width:50,height:50,color:wallColor})),void walls.push(new square({x:-50,y:-50,width:50,height:50,color:wallColor}));pathway.removeWalls([t]),t=pathway.addRandom("wall"),i.place(t),a=pathway.getOptions(player.returnPos()),o=[];for(l=0;l<a.length;l++)o.push(a[l].object)}if(i.place(t),walls.push(i),wallPos.push(i.returnPos()),walls.length>=size*size-2)return score+=2,void levelUpNoScoreIncrement();var n=pathway.addWallsInUnreachableLocations();score+=n.length;for(var s=0;s<n.length;s++){var r=null;(r=3<level?new square({x:-50,y:-50,width:50,height:50,color:rainbowColors[Math.floor(Math.random()*rainbowColors.length)]}):new square({x:-50,y:-50,width:50,height:50,color:wallColor})).place(n[s]),walls.push(r),wallPos.push(r.returnPos())}if(console.log("There are "+walls.length+"walls right now"),walls.length>=size*size-2)return score+=2,void levelUpNoScoreIncrement();t=pathway.addRandom("objective"),objective.place(t),resetClock()}}else if(seconds=allowed-milliseconds/1e3,!0===key.left?checkMove("LEFT"):!0===key.right?checkMove("RIGHT"):!0===key.up?checkMove("UP"):!0===key.down&&checkMove("DOWN"),resetKeys(),doRectsCollide(player.returnRect(),objective.returnRect()))if(walls.length===size*size-2){level+=1,pathway.removeWalls(wallPos),walls=addWalls(),pathway.addWalls(wallPos),score+=50,size/2-2<lowestTime&&(lowestTime-=1);for(t=pathway.addRandom("objective");!pathway.isPathway(t);)t=pathway.addRandom("objective");objective.place(t),seconds=allowed=size,resetClock()}else{var i;score+=1,i=3<level?new square({x:-50,y:-50,width:50,height:50,color:rainbowColors[Math.floor(Math.random()*rainbowColors.length)]}):new square({x:-50,y:-50,width:50,height:50,color:wallColor});t=pathway.addRandom("wall");i.place(t);for(a=pathway.getOptions(player.returnPos()),o=[],l=0;l<a.length;l++)o.push(a[l].object);for(;-1===o.indexOf("_")&&-1===o.indexOf("O")||doRectsCollide(player.returnRect(),i.returnRect());){pathway.removeWalls([t]),t=pathway.addRandom("wall"),i.place(t),a=pathway.getOptions(player.returnPos()),o=[];for(l=0;l<a.length;l++)o.push(a[l].object)}i.place(t),walls.push(i),wallPos.push(i.returnPos()),t=pathway.addRandom("objective"),objective.place(t),resetClock()}timeLabel=(Math.round(10*seconds)/10).toString(),scoreLabel=score.toString()}function levelUpNoScoreIncrement(){level+=1,pathway.removeWalls(wallPos),walls=addWalls(),size/2-2<lowestTime&&(lowestTime-=1),tempPos=pathway.addRandom("objective"),objective.place(tempPos),seconds=allowed=size,resetClock()}function doubleCheckMoves(e){var t=Object.assign({},e),a=Object.assign({},player.returnRect()),o=checkIndividualMovesUp(e);player.place(a);var l=checkIndividualMovesDown(e);return player.place(a),l<=o?checkIndividualMovesUp(e):checkIndividualMovesDown(e),t}function checkIndividualMovesUp(e){var t=0;return!0===e.left?checkMove("LEFT")&&(t+=1):!0===e.right&&checkMove("RIGHT")&&(t+=1),!0===e.up?checkMove("UP")&&(t+=1):!0===e.down&&checkMove("DOWN")&&(t+=1),t}function checkIndividualMovesDown(e){var t=0;return!0===e.down?checkMove("DOWN")&&(t+=1):!0===e.up&&checkMove("UP")&&(t+=1),!0===e.right?checkMove("RIGHT")&&(t+=1):!0===e.left&&checkMove("LEFT")&&(t+=1),t}function loseGame(e){lost&&(lost=!1,playinGame=!1)}function updateClock(){milliseconds+=100}function setGame(){timerInterval=setInterval(updateClock,100),level=1,lowestTime=size/2,milliseconds=score=0,seconds=allowed=size,pathway=new map({width:size,height:size}),player=new playerSquare(playerSymbol),pathway.addPlayer(player.returnPos()),wallPos=[],walls=addWalls(),pathway.addWalls(wallPos),objective=new square(objectiveSymbol);var e=pathway.addRandom("objective");objective.place(e),key={left:!1,right:!1,up:!1,down:!1}}function addWalls(){return wallPos=[],(walls=[]).push(new square({x:-50,y:-50,width:50,height:50,color:wallColor})),walls.push(new square({x:-50,y:-50,width:50,height:50,color:wallColor})),walls.push(new square({x:-50,y:-50,width:50,height:50,color:wallColor})),walls.push(new square({x:-50,y:-50,width:50,height:50,color:wallColor})),walls[0].place({x:Math.round(50*size/2-50),y:Math.round(50*size/2-50)}),walls[1].place({x:Math.round(50*size/2),y:Math.round(50*size/2-50)}),walls[2].place({x:Math.round(50*size/2-50),y:Math.round(50*size/2)}),walls[3].place({x:Math.round(50*size/2),y:Math.round(50*size/2)}),wallPos.push({x:Math.round(50*size/2-50),y:Math.round(50*size/2-50)}),wallPos.push({x:Math.round(50*size/2),y:Math.round(50*size/2-50)}),wallPos.push({x:Math.round(50*size/2-50),y:Math.round(50*size/2)}),wallPos.push({x:Math.round(50*size/2),y:Math.round(50*size/2)}),pathway.addWalls(wallPos),walls}function drawBackground(){drawRect({x:0,y:0,width:canvas.width,height:canvas.height,color:bgColor})}function drawAll(){if(playingGame){drawBackground(),drawWalls(),drawRect(player.returnRect()),drawRect(objective.returnRect());for(var e=0;e<walls.length;e++)drawRect(walls[e].returnRect);ctx.fillStyle="#000000",ctx.font="16px Arial",ctx.fillText(timeLabel,canvas.width/2-10,canvas.height/2-10),ctx.fillStyle="#000000",ctx.font="bold 16px Arial",ctx.fillText(scoreLabel,canvas.width/2-10,canvas.height/2+10)}else drawMenu()}function drawWalls(){for(var e=0;e<walls.length;e++){var t=walls[e].returnRect();drawRect({x:t.x,y:t.y,width:t.width,height:t.height,color:t.color})}}function drawMenu(){ctx.clearRect(0,0,canvas.width,canvas.height),drawBackground(),drawRect(sixButton),drawRect(tenButton),drawRect(fourteenButton),drawRect(jsSquare),ctx.font="30px Arial",ctx.fillStyle="#ffffff",ctx.fillText(welcomeMessage,160,100),ctx.fillText(pureJsPureLabel,185,170),ctx.font="16px Arial",ctx.fillStyle="#000000",ctx.fillText(sixLabel,83,255),ctx.fillText(tenLabel,223,255),ctx.fillText(fourteenLabel,370,255),ctx.font="30px Arial",ctx.fillText(pureJsJsLabel,275,170)}function resetClock(){lowestTime<allowed&&(allowed-=.5),seconds=allowed,milliseconds=0}function arePositionsEqual(e,t){return e.x===t.x&&e.y===t.y}function checkMove(e){var t=player.returnPos(),a={x:0,y:0},o=player.returnPos(),l=o.x,n=o.y;a.x=o.x,a.y=o.y;var s=50;if(playSmooth&&(s=smoothBasePlayerSpeed,isMouseDown&&(s=getMousePlayerSpeed())),"LEFT"===e?(a.x=o.x-s,l=o.x-o.x%50):"RIGHT"===e?(a.x=o.x+s,l=o.x+(50-o.x%50)):"UP"===e?(a.y=o.y-s,n=o.y-o.y%50):"DOWN"===e&&(a.y=o.y+s,n=o.y+(50-o.y%50)),playSmooth){var r=a,i={x:l,y:n},c=a.x%50,h=a.y%50,d=Math.abs(l-o.x),y=Math.abs(n-o.y);(c<s||-s<50-c||h<s||-s<50-h)&&d<s&&y<s&&(0!==d||0!==y)&&(r={x:l,y:n},i=a);checkBoundaryAndCollision(o,r);arePositionsEqual(t,player.returnPos())&&checkBoundaryAndCollision(o,i)}else playSmooth||"X"!==pathway.getObject(a)&&(player.move(a),pathway.addPlayer(a));return!arePositionsEqual(t,player.returnPos())}function checkBoundaryAndCollision(e,t){if(0<=t.x&&t.x<=50*size-50&&0<=t.y&&t.y<=50*size-50){var a=!1;player.move(t);for(var o=0;o<walls.length;o++)doRectsCollide(player.returnRect(),walls[o].returnRect())&&(a=!0);return!a||(player.move(e),!1)}return!1}setInterval(gameLoop,10),gameLoop();